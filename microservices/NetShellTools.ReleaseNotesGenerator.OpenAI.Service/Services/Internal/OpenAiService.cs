using NetShellTools.ReleaseNotesGenerator.OpenAI.Service.Models.OpenAiController;
using OpenAI_API;
using OpenAI_API.Models;

namespace NetShellTools.ReleaseNotesGenerator.OpenAI.Service.Services.Internal;

internal sealed class OpenAiService : IOpenAiService
{
    private readonly ILogger<OpenAiService> _logger;
    private readonly IOpenAIAPI _openAiApi;
    
    public OpenAiService(ILogger<OpenAiService> logger, IOpenAIAPI openAiApi)
    {
        _logger = logger;
        _openAiApi = openAiApi;
    }

    public async Task<string> GenerateReleaseNotesAsync(GenerateReleaseNotesRequest request)
    {
        _logger.LogInformation("GenerateReleaseNotesAsync executed.");
        
        var chat = _openAiApi.Chat.CreateConversation();
        chat.Model = Model.GPT4;

        var systemPrompt = "You are a release engineer in a software company." +
                           "Your task is to create release notes based on the work item title and description." +
                           "You will be given a collection of objects that represent a work item." +
                           "An object has two fields: title, description and type of the work item. (The description field is optional)" +
                           "Based on those values, you should create release notes. Please keep each note short, 1-line sentences " +
                           "and don't include work item type to generated result. " +
                           $"{(!string.IsNullOrEmpty(request.ReleaseName) ? $"Also add: '{request.ReleaseName}' as a title/summary of release notes.": string.Empty)}";
        
        var userInput = "Also add: 'Release 1' as a title/summary of release notes. \n " +
                             "Work item type: User Story;" +
                             "Title: Integration with OpenAi service;" +
                             "Description: as a user, I would like to send work items data and as a result obtain release note that was generated by AI;" +
                             "Work item type: Bug;" +
                             "Title: Fix issue with authentication to Azure DevOps;";
        var outputExample = "### Release 1 \n\n" +
                                        "- (Feature) Integration with OpenAI service: Users can send work items data and receive a release note generated by AI.\n" +
                                        "- (Bug) Fixed issue with authentication to Azure DevOps.";

        chat.AppendSystemMessage(systemPrompt);
        chat.AppendUserInput(userInput);
        chat.AppendExampleChatbotOutput(outputExample);
        request.WorkItems.ForEach(item =>
        {
            var workItemDescription = !string.IsNullOrEmpty(item.Description) ? $"; Description: {item.Description}" : "";
            chat.AppendUserInput($" Work item type: {item.WorkItemType}; Title: {item.Title}{workItemDescription};");
        });
        
        _logger.LogInformation("GenerateReleaseNotesAsync finished.");
        
        return await chat.GetResponseFromChatbotAsync();
    }
}